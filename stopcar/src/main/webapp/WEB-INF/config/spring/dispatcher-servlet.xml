<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd">
  <!-- 启用注解，并定义组件查找规则 ，mvc层只负责扫描@Controller -->

  <context:component-scan base-package="com.park*" use-default-filters="false">
    <context:include-filter type="annotation"
      expression="org.springframework.stereotype.Controller"/>
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
  </context:component-scan>


  <!-- 视图处理器 -->
  <bean id="viewResolver"
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- <property name="prefix" value="/WEB-INF/views/jsp/function/" /> -->
    <property name="suffix" value=".jsp"/>
  </bean>

  <!-- 定义国际化资源文件查找规则 ，各种messages.properties -->
  <bean id="messageSource"
    class="org.springframework.context.support.ResourceBundleMessageSource"
    p:basename="messages">
  </bean>
  <!-- servlet适配器，这里必须明确声明，因为spring默认没有初始化该适配器 -->
  <bean id="servletHandlerAdapter"
    class="org.springframework.web.servlet.handler.SimpleServletHandlerAdapter"/>

  <!-- 定义文件上传处理器 -->
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
    p:defaultEncoding="UTF-8" p:maxUploadSize="10485760000" p:maxInMemorySize="40960"/>
  <!-- 异常处理器 -->
  <!--

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    定义默认的异常处理页面，当该异常类型的注册时使用
    <property name="defaultErrorView" value="error"></property>
    定义异常处理页面用来获取异常信息的变量名，默认名为exception
    <property name="exceptionAttribute" value="ex"></property>
    定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值
    <property name="exceptionMappings">
        <props>
            <prop key="cn.basttg.core.exception.BusinessException">error-business</prop>
            <prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop>

            这里还可以继续扩展对不同异常类型的处理
        </props>
    </property>
</bean>
   -->

  <!-- 本地化资源处理器 -->
  <bean id="localeResolver"
    class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

  <!-- 定义本地化变更拦截器 -->
  <bean id="localeChangeInterceptor"
    class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
  <!-- 定义本地化变更拦截器 -->
  <bean id="MyInterceptor"
    class="com.park.interceptor.SpringMVCInterceptor"/>

  <!-- 请求拦截器，每一个用户请求都会被拦截 -->
  <mvc:interceptors>
    <!--
            使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求
      <bean class="com.host.app.web.interceptor.AllInterceptor"/>
      <mvc:interceptor>
          <mvc:mapping path="/test/number.do"/>
           定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的
          <bean class="com.host.app.web.interceptor.LoginInterceptor"/>
      </mvc:interceptor>
     -->
    <ref bean="MyInterceptor"/>
  </mvc:interceptors>


  <!-- 定义注解驱动Controller方法处理适配器 ,注：该适配器必须声明在<mvc:annotation-driven />之前，否则不能正常处理参数类型的转换 -->
  <!--
      <bean
      class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
      <property name="messageConverters">
          <list>
              <bean
                  class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
              <bean
                  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
          </list>
      </property>
  </bean>
   -->


  <!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter
      两个bean,是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson） -->
  <mvc:annotation-driven/>
  <!-- 
  
    <bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				 自定义转换器 <bean class="com.ll.model.StringToPersonConverter"
			</list>
		</property>
  </bean>
  <mvc:annotation-driven conversion-service="conversionService"/>
   -->


  <!-- 资源访问处理器 -->
  <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
  <!-- 静态资源访问 -->
  <mvc:annotation-driven/>
  <mvc:resources location="/img/" mapping="/img/**"/>
  <mvc:resources location="/js/" mapping="/js/**"/>
  <mvc:resources location="/html/" mapping="/html/**"/>
  <mvc:resources location="/jsp/" mapping="/jsp/**"/>
  <mvc:resources location="/resources/" mapping="/resources/**"/>
</beans>