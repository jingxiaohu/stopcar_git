package com.park.pda.action.finger;

import com.park.action.BaseWebTest;
import org.junit.Test;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import java.util.Date;

/**
 * Created by zzy on 2017/7/21.
 */
public class Read_FingerprintCollectionActionTest extends BaseWebTest {

    /**
     * 查询指纹系统--用户信息
     *
     * 请求参数：
     *
     *
     *
     * 响应数据：
     * {"data":{"finger_venoList":["V2taV……BOHdKekdQekE9"],"ui_tel":"13990135041","fingerprintList":["Su+……AAG++/vWkBAABd77+977+9Ie+/vSAANgx+AO+/vQDvv73vv73vv70AKQDvv70M77+9AC7vv716D++/vQA0AHUNe++/vUQA77+9DyQA77+9AGvvv73vv70ASADvv70N77+9AEzvv711Du+/vQBTAO+/vQ/Zjl8A77+9Du+/vQDvv70AJO+/vUcAbQBsDzMAe++/ve+/vQ/vv70AewBhD++/vX0AOA3vv70AQwDvv73vv73vv70A77+9AO+/vQ7vv70A77+977+9Vg9hAO+/vQDvv70PL++/ve+/vQDvv70PPwAAAO+/vQDvv70A77+9Du+/vQDvv70ND38AAAFhD3fvv70GAe+/vQ/vv70A77+9Ae+/ve+/vXQAGAHvv70P77+9ACjvv73vv70P77+9ACsBUA/vv73vv70wAe+/vQ/vv70A77+9Ae+/ve+/ve+/vQBDAe+/vQ/Jre+/ve+/ve+/ve+/vSl+77+9PUrvv70g77+9BTJrEjIn77+9T1jvv70KGO+/vQzvv71y77+9AO+/vRYIJlgHMe+/vRMy77+977+9Mu+/ve+/vQvvv73vv70V77+977+9HO+/ve+/vSoOEO+/vQ9p77+977+977+9Me+/vQ4977+9FRrvv73vv70xAO+/vTI6OVQUURxuAR0sEe+/vXcK77+977+9exnvv70MIO+/vQglUe+/vT0F77+9Ge+/vVMnc3YzFe+/vTPvv7172L3vv70GaCbvv73vv70p77+977+9GRHvv70n77+9CClWQjw177+9Ie+/ve+/vTLvv70E77+9YBbvv73vv73vv70IRm0Z77+977+9Je+/vQQx77+977+9Gu+/ve+/vTPvv711Mu+/ve+/vTXvv73vv73vv70z77+977+977+977+9Je+/vSpg77+9EjR0Ge+/vQhU0Kbvv70C77+9MQEB77+9Fxvvv70AcO+/vRdl77+9WwMA77+9Fw9xAgDvv70YIu+/ve+/vQAQ77+977+977+977+977+9K++/vTrvv71J77+977+9BADvv70zKe+/vQUDVTkr77+977+977+9FO+/vRY2ae+/ve+/ve+/ve+/vUTvv73vv71U77+9Tj8RACU+77+9O++/vSpzZe+/vTdZBQDvv71A77+9dToGAHNE77+9R++/vQ/vv70nT++/ve+/ve+/ve+/vTjvv73vv73vv70EADhQcO+/vQQDHlUcOAkA1p/vv71Y77+977+9AwDvv71fGgUFAz1lJ++/vVkEAO+/vWtzCxAASmzvv73vv73vv73vv71J77+977+9eAUAQ3Hvv71pCO+/ve+/vXTvv73vv71S77+9Be+/vXbvv70BFHfvv70w77+9O++/ve+/vXDvv73vv73vv71KZWzvv70A77+977+977+977+977+977+9w5Tvv70W77+9GHzvv70zKSfvv73vv73vv71P77+977+9WQYA77+977+9Ke+/ve+/vQUA77+9fz1377+9AB4Z77+9OO+/vRvvv73vv70677+977+9Tu+/vWrvv70GAF1r77+977+9Te+/vQwALu+/ve+/vQXvv73vv71077+977+977+977+9TQ7vv70j77+9VC/vv73vv70xRO+/ve+/vQA8T++/ve+/ve+/ve+/ve+/ve+/vQXvv73vv73vv70LAEPvv73vv70877+9O++/ve+/vRQA77+9ae+/ve+/vXFP77+9wpDvv71xDe+/vSjvv71Z77+977+977+977+977+977+9BO+/ve+/ve+/vQYA77+977+9JGoG77+9Bu+/vUbvv70D77+9TAfFne+/ve+/vWbvv70JAC8g77+977+9cu+/ve+/vTIIADAx77+977+9cu+/ve+/vT8FEDzvv73vv73vv70GEO+/vQMg77+9SAcT77+9Ce+/ve+/ve+/ve+/ve+/vQQFE++/vQjvv73vv70vCRDvv70KH++/vVAVEO+/vQpSRu+/vXFCce+/ve+/vTFGBhPvv70SA++/ve+/vWYE77+9eR/vv71tCBBSOQDvv71lC++/vWlHBu+/vW9A77+9QgPvv71CAQAAC0Xvv},"errorcode":"","errormsg":"查询成功","errorno":"0"}
     * @throws Exception
     */
    @Test
    public void fingerQueryTest() throws Exception{
        MultiValueMap<String, String> params = new LinkedMultiValueMap<>();
        params.add("dtype","2");
        //业务参数
        params.add("ui_tel","13990135041");
        params.add("verify_code","352965");
        params.add("verify_list","b13dd38067f5a2b936086889dec05afd");
        params.add("vclass","4");
        sign(params,"dtype","ui_tel");
        System.out.println(new Date().getTime());

        MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.post("/v1/finger_query").params(params))
                .andExpect(MockMvcResultMatchers.status().isOk()).andReturn();
        System.out.println(mvcResult.getResponse().getContentAsString());
    }
}
